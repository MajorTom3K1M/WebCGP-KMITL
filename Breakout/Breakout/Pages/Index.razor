@page "/"
@page "/index.html"
@inject IJSRuntime JsRuntime
@using nkast.Wasm.Canvas

<PageTitle>Breakout</PageTitle>

<button @onclick="GoBack" class="bg-black/50 p-4 flex justify-between items-center" data-id="3">
    <a data-id="5" href="#" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 hover:text-accent-foreground h-10 px-4 py-2 text-white hover:bg-white/10">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-left h-4 w-4 mr-2" data-id="1"><path d="m12 19-7-7 7-7"></path><path d="M19 12H5"></path></svg>
        Back to Library
    </a>
</button>

<canvas id="theCanvas" style="touch-action:none;"></canvas>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // This is where you can manipulate the DOM (e.g., set the canvas size)
            await JsRuntime.InvokeVoidAsync("setCanvasSize", Singleton.WIDTH * Singleton.SIZE, Singleton.HEIGHT * Singleton.SIZE);
        }
    }

    private async Task GoBack()
    {
        await JsRuntime.InvokeVoidAsync("goBack");
    }
}